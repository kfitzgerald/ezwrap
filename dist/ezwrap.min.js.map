{"version":3,"sources":["ezwrap.min.js"],"names":["require","r","e","n","t","o","i","f","c","u","a","Error","code","p","exports","call","length","ezwrap","module","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Util","window","inspect","custom","EZWrap","obj","instance","Constructor","TypeError","_classCallCheck","this","raw","protoProps","staticProps","prototype","_createClass","value","depth","options","_this","attributeString","keys","attributes","map","concat","join","openTag","name","body","children","stylize","get","filter","getEmptyObject","find","closure","forEach","_ref","arguments","undefined","_ref$children","_ref$name","_ref$attributes","_ref$value","util"],"mappings":"AAAAA,QAAoB,SAASC,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBR,SAASA,QAAQ,IAAIO,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGG,EAAE,OAAOA,EAAEH,GAAE,GAAI,IAAII,EAAE,IAAIC,MAAM,uBAAuBL,EAAE,KAAK,MAAMI,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEV,EAAEG,GAAG,CAACQ,QAAQ,IAAIZ,EAAEI,GAAG,GAAGS,KAAKF,EAAEC,QAAQ,SAASb,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIY,EAAEA,EAAEC,QAAQb,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGQ,QAAQ,IAAI,IAAIL,EAAE,mBAAmBT,SAASA,QAAQM,EAAE,EAAEA,EAAEF,EAAEY,OAAOV,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACY,OAAS,CAAC,SAASjB,EAAQkB,EAAOJ,GACvf,aAIA,SAASK,EAAkBC,EAAQC,GAAS,IAAK,IAAIf,EAAI,EAAGA,EAAIe,EAAML,OAAQV,IAAK,CAAE,IAAIgB,EAAaD,EAAMf,GAAIgB,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeP,EAAQE,EAAWM,IAAKN,IAI7S,IAAIO,EAGFA,EADoB,oBAAXC,OACF9B,EAAQ,QAER,CACL+B,QAAS,CACPC,OAAQ,oBASd,IAAIC,EAAsB,WAKxB,SAASA,EAAOC,IA3BlB,SAAyBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCA4B5GC,CAAgBC,KAAMN,GAMtBM,KAAKC,IAAMN,EAoMb,OAlOF,SAAsBE,EAAaK,EAAYC,GAAmBD,GAAYtB,EAAkBiB,EAAYO,UAAWF,GAAiBC,GAAavB,EAAkBiB,EAAaM,GAAchB,OAAOC,eAAeS,EAAa,YAAa,CAAEX,UAAU,IAwC5PmB,CAAaX,EAAQ,CAAC,CACpBL,IA0LFC,EAAKE,QAAQC,OAzLXa,MAAO,SAAeC,EAAOC,GAC3B,IAAIC,EAAQT,KAERU,EAAkBvB,OAAOwB,KAAKX,KAAKC,IAAIW,YAAYC,IAAI,SAAUxB,GACnE,MAAO,GAAGyB,OAAOzB,EAAK,MAAOyB,OAAOL,EAAMR,IAAIW,WAAWvB,GAAM,OAC9D0B,KAAK,KACJC,EAAU,IAAIF,OAAOd,KAAKiB,MAAMH,OAAOJ,EAAkB,IAAMA,EAAkB,GAAI,KACrFQ,EAAOlB,KAAKC,IAAIkB,SAASN,IAAI,SAAUjD,GACzC,MAAO,MAAMkD,OAAOlD,EAAEqD,KAAM,aAC3BF,KAAK,OAASf,KAAKC,IAAIK,OAAS,KAAON,KAAKC,IAAIK,OAAS,GAC5D,OAAOE,EAAQY,QAAQJ,EAAU,KAAOE,EAAO,OAAOJ,OAAOd,KAAKiB,KAAM,QAQzE,CACD5B,IAAK,YACLgC,IAAK,WACH,OAAO,IAOR,CACDhC,IAAK,SACLgC,IAAK,WACH,OAAOrB,KAAKC,IAAIkB,SAAS1C,SAO1B,CACDY,IAAK,QACLgC,IAAK,WACH,OAAOrB,KAAKC,IAAIK,OAAS,OAO1B,CACDjB,IAAK,OACLgC,IAAK,WACH,OAAOrB,KAAKC,IAAIgB,MAAQ,OAQzB,CACD5B,IAAK,OACLiB,MAAO,SAAcW,GACnB,OAAOjB,KAAKC,IAAIW,WAAWK,IAAS,OAQrC,CACD5B,IAAK,MACLiB,MAAO,SAAaW,GAClB,IAAIE,EAAWnB,KAAKC,IAAIkB,SAASG,OAAO,SAAU1D,GAChD,OAAOA,EAAEqD,OAASA,IAEpB,OAAO,IAAIvB,EAAOA,EAAO6B,eAAe,CACtCN,KAAM,OAAOH,OAAOG,GACpBE,SAAUA,OASb,CACD9B,IAAK,MACLiB,MAAO,SAAaW,GAIlB,OAAO,IAAIvB,EAHCM,KAAKC,IAAIkB,SAASK,KAAK,SAAU5D,GAC3C,OAAOA,EAAEqD,OAASA,KAEOvB,EAAO6B,eAAe,CAC/CN,KAAM,kBAAkBH,OAAOG,QASlC,CACD5B,IAAK,OACLiB,MAAO,SAAcmB,GACnB,OAAO,IAAI/B,EAAOM,KAAKC,IAAIkB,SAASK,KAAK,SAAU5D,GACjD,OAAO6D,EAAQ,IAAI/B,EAAO9B,OACtB8B,EAAO6B,eAAe,CAC1BN,KAAM,0BAQT,CACD5B,IAAK,UACLiB,MAAO,SAAiBmB,GACtBzB,KAAKC,IAAIkB,SAASO,QAAQ,SAAU9D,GAClC6D,EAAQ,IAAI/B,EAAO9B,QAStB,CACDyB,IAAK,SACLiB,MAAO,SAAgBmB,GACrB,OAAO,IAAI/B,EAAOA,EAAO6B,eAAe,CACtCN,KAAM,mBACNE,SAAUnB,KAAKC,IAAIkB,SAASG,OAAO,SAAU1D,GAC3C,OAAO6D,EAAQ,IAAI/B,EAAO9B,WAU/B,CACDyB,IAAK,MACLiB,MAAO,SAAamB,GAClB,OAAOzB,KAAKC,IAAIkB,SAASN,IAAI,SAAUjD,GACrC,OAAO6D,EAAQ,IAAI/B,EAAO9B,SAG5B,CAAC,CACHyB,IAAK,iBACLiB,MASA,SAAA,GACE,IAAIqB,EAA0B,EAAnBC,UAAUnD,aAA+BoD,IADtD,EAAA,EACiF,GAC3EC,EAAgBH,EAAKR,SACrBA,OAA6B,IAAlBW,EAA2B,GAAKA,EAC3CC,EAAYJ,EAAKV,KACjBA,OAAqB,IAAdc,EAAuB,GAAKA,EACnCC,EAAkBL,EAAKf,WACvBA,OAAiC,IAApBoB,EAA6B,GAAKA,EAC/CC,EAAaN,EAAKrB,MAGtB,MAAO,CACLW,KAAMA,EACNX,WAJyB,IAAf2B,EAAwB,GAAKA,EAKvCrB,WAAYA,EACZO,SAAUA,OAKTzB,EAhNiB,GAmN1Bf,EAAOJ,QAAUmB,GAEf,CAACwC,KAAO,UAAU,GAAG","file":"ezwrap.min.js","sourcesContent":["require=(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({\"ezwrap\":[function(require,module,exports){\n\"use strict\"; // browser shim util - not needed for browser, don't bloat\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Util;\n\nif (typeof window === 'undefined') {\n  Util = require('util');\n} else {\n  Util = {\n    inspect: {\n      custom: '__customInspect'\n    }\n  };\n}\n/**\n * Wrapper for accessing parsed XML objects\n */\n\n\nvar EZWrap = /*#__PURE__*/function (_Util$inspect$custom) {\n  /**\n   * Creates a new wrapped instance of an parsed XML object\n   * @param {*} obj\n   */\n  function EZWrap(obj) {\n    _classCallCheck(this, EZWrap);\n\n    /**\n     * Returns the underlying object from the original XML tree\n     * @type {*}\n     */\n    this.raw = obj;\n  }\n  /**\n   * Custom Inspection for Node.js\n   * @param depth\n   * @param options\n   * @returns {*}\n   */\n\n\n  _createClass(EZWrap, [{\n    key: _Util$inspect$custom,\n    value: function value(depth, options) {\n      var _this = this;\n\n      var attributeString = Object.keys(this.raw.attributes).map(function (key) {\n        return \"\".concat(key, \"=\\\"\").concat(_this.raw.attributes[key], \"\\\"\");\n      }).join(' ');\n      var openTag = \"<\".concat(this.name).concat(attributeString ? ' ' + attributeString : '', \">\");\n      var body = this.raw.children.map(function (n) {\n        return \"  <\".concat(n.name, \" ... />\");\n      }).join('\\n') || this.raw.value && '  ' + this.raw.value || '';\n      return options.stylize(openTag + '\\n' + body + \"\\n</\".concat(this.name, \">\"));\n    } // noinspection JSMethodCanBeStatic\n\n    /**\n     * Returns whether the object is a EZWrapped object\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isWrapped\",\n    get: function get() {\n      return true;\n    }\n    /**\n     * Gets the number of children contained in the node\n     * @returns {number}\n     */\n\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.raw.children.length;\n    }\n    /**\n     * Gets the node value\n     * @returns {string|null}\n     */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.raw.value || null;\n    }\n    /**\n     * Gets the node name\n     * @returns {string|null}\n     */\n\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this.raw.name || null;\n    }\n    /**\n     * Gets the value of an attribute contained on the node\n     * @param {string} name\n     * @returns {string|null}\n     */\n\n  }, {\n    key: \"attr\",\n    value: function attr(name) {\n      return this.raw.attributes[name] || null;\n    }\n    /**\n     * Gets all children with the given name\n     * @param {string} name\n     * @returns {EZWrap}\n     */\n\n  }, {\n    key: \"all\",\n    value: function all(name) {\n      var children = this.raw.children.filter(function (n) {\n        return n.name === name;\n      });\n      return new EZWrap(EZWrap.getEmptyObject({\n        name: \"all-\".concat(name),\n        children: children\n      }));\n    }\n    /**\n     * Gets the first child with the given name\n     * @param {string} name\n     * @returns {EZWrap}\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      var child = this.raw.children.find(function (n) {\n        return n.name === name;\n      });\n      return new EZWrap(child || EZWrap.getEmptyObject({\n        name: \"no-matches-for-\".concat(name)\n      }));\n    }\n    /**\n     * Similar to Array.find(node => boolean), where node is an EZWrapped instance of each child\n     * @param {function(EZWrap)} closure\n     * @returns {*}\n     */\n\n  }, {\n    key: \"find\",\n    value: function find(closure) {\n      return new EZWrap(this.raw.children.find(function (n) {\n        return closure(new EZWrap(n));\n      }) || EZWrap.getEmptyObject({\n        name: \"no-result-for-find\"\n      }));\n    }\n    /**\n     * Similar to Array.forEach(node => ...), where node is an EZWRapped instance of each child\n     * @param {function(EZWrap)} closure\n     */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(closure) {\n      this.raw.children.forEach(function (n) {\n        closure(new EZWrap(n));\n      });\n    }\n    /**\n     * Similar to Array.filter(node => boolean), where node is an EZWrapped instance of each child\n     * @param {function(EZWrap)} closure\n     * @returns {*}\n     */\n\n  }, {\n    key: \"filter\",\n    value: function filter(closure) {\n      return new EZWrap(EZWrap.getEmptyObject({\n        name: \"filtered-results\",\n        children: this.raw.children.filter(function (n) {\n          return closure(new EZWrap(n));\n        })\n      }));\n    }\n    /**\n     * Similar to Array.map(node => value), where node is an EZWrapped instance of each child\n     * @param closure\n     * @returns {*}\n     */\n\n  }, {\n    key: \"map\",\n    value: function map(closure) {\n      return this.raw.children.map(function (n) {\n        return closure(new EZWrap(n));\n      });\n    }\n  }], [{\n    key: \"getEmptyObject\",\n    value:\n    /**\n     * Creates an empty node\n     * @param children\n     * @param name\n     * @param attributes\n     * @param value\n     * @returns {{children: Array, name: string, attributes, value: string}}\n     */\n    function getEmptyObject() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$children = _ref.children,\n          children = _ref$children === void 0 ? [] : _ref$children,\n          _ref$name = _ref.name,\n          name = _ref$name === void 0 ? '' : _ref$name,\n          _ref$attributes = _ref.attributes,\n          attributes = _ref$attributes === void 0 ? {} : _ref$attributes,\n          _ref$value = _ref.value,\n          value = _ref$value === void 0 ? '' : _ref$value;\n\n      return {\n        name: name,\n        value: value,\n        attributes: attributes,\n        children: children\n      };\n    }\n  }]);\n\n  return EZWrap;\n}(Util.inspect.custom);\n\nmodule.exports = EZWrap;\n\n},{\"util\":\"util\"}]},{},[])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}